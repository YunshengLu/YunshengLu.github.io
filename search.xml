<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown语法[基础]</title>
    <url>/2022/03/29/Markdown%E8%AF%AD%E6%B3%95-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p><strong>Markdown 是一种轻量级标记语言，在 2004 由约翰·格鲁伯创建，它允许人们使用纯文本格式编写文档，可以和HTML语法混搭。编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式。</strong><br><u>本文仅自我学习笔记<u><br><strong>Markdown 编写的文档后缀为 .md, .markdown</strong></p>
<span id="more"></span>

<h1 id="文本元素"><a href="#文本元素" class="headerlink" title="文本元素"></a><strong>文本元素</strong></h1><ul>
<li><h2 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**加粗**</span><br><span class="line"></span><br><span class="line">_斜体_</span><br><span class="line"></span><br><span class="line">~~删除线~~</span><br><span class="line"></span><br><span class="line">&lt;u&gt;下划线&lt;/u&gt;</span><br><span class="line"></span><br><span class="line">**_加粗斜体_**</span><br><span class="line"></span><br><span class="line">~~**加粗删除线**~~</span><br><span class="line"></span><br><span class="line">~~_斜体删除线_~~</span><br><span class="line"></span><br><span class="line">~~**_加粗斜体删除线_**~~</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果"><a href="#实际输出效果" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><p>  <strong>加粗</strong></p>
<p>  <em>斜体</em></p>
<p>  <del>删除线</del></p>
<p>  <u>下划线</u></p>
<p>  <strong><em>加粗斜体</em></strong></p>
<p>  <del><strong>加粗删除线</strong></del></p>
<p>  <del><em>斜体删除线</em></del></p>
<p>  <del><strong><em>加粗斜体删除线</em></strong></del></p>
<p>  &nbsp;</p>
</li>
</ul>
<h1 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a><strong>区块元素</strong></h1><ul>
<li><h2 id="段落和换行"><a href="#段落和换行" class="headerlink" title="段落和换行"></a><strong>段落和换行</strong></h2><p>  &nbsp;</p>
<p>  一个 Markdown 段落普通段落不该用空格或制表符来缩进。空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格或制表符，则该行也会被视为空行。某些渲染器对空格或制表符换行会不显示换行，可以用HTML语法中的&amp;nbsp加换行实现。</p>
</li>
<li><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p>  Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p>
<p>  类 Setext 形式是用底线的形式，利用 =（最高阶标题）和 -（第二阶标题）如下：</p>
</li>
<li><h2 id="Markdown-1"><a href="#Markdown-1" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=======</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">-------</span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-1"><a href="#实际输出效果-1" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="  一级标题"></a>  一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="  二级标题"></a>  二级标题</h2><p>  文字下一行输入任何数量的 = 和 - 都可以达到效果。</p>
<p>  类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到h1~h6，注意 # 和标题之间要有空格，如下：</p>
</li>
<li><h2 id="Markdown-2"><a href="#Markdown-2" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># h1</span><br><span class="line">## h2</span><br><span class="line">### h3</span><br><span class="line">#### h4</span><br><span class="line">##### h5</span><br><span class="line">###### h6</span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-2"><a href="#实际输出效果-2" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><h1 id="h1"><a href="#h1" class="headerlink" title="h1"></a>h1</h1><h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><h4 id="h4"><a href="#h4" class="headerlink" title="h4"></a>h4</h4><h5 id="h5"><a href="#h5" class="headerlink" title="h5"></a>h5</h5><h6 id="h6"><a href="#h6" class="headerlink" title="h6"></a>h6</h6></li>
</ul>
<h1 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a><strong>区块引用</strong></h1><p>Markdown 标记区块引用是使用 &gt; 的引用方式。在 Markdown 文件中建立一个区块引用，只需在每行的行首加上 &gt; ：</p>
<ul>
<li><h2 id="Markdown-3"><a href="#Markdown-3" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 这是一段引用   </span><br><span class="line">&gt; 这是一段引用   </span><br><span class="line">&gt; 这是一段引用</span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-3"><a href="#实际输出效果-3" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><blockquote>
<p>这是一段引用<br>这是一段引用<br>这是一段引用  </p>
</blockquote>
<p>  引用可以嵌套引用或Markdown其他语法，如 ：</p>
</li>
</ul>
<ul>
<li><h2 id="实际输出效果-4"><a href="#实际输出效果-4" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><blockquote>
<ol>
<li>这是一段引用  <blockquote>
<ol>
<li>这是一段引用  </li>
</ol>
</blockquote>
</li>
<li>代码嵌套<blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;This is a blockquote&quot;</span></span><br></pre></td></tr></table></figure></blockquote>
</li>
<li>这是一段引用</li>
</ol>
</blockquote>
<p>  <strong>注意引用完一段需要编写一般文本时需要换行，不然接下来编写的内容也会被认为是引用</strong></p>
</li>
</ul>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a><strong>列表</strong></h1><p>Markdown 支持有序列表和无序列表。</p>
<p>列表项目标记通常是放在最左边，但是也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p>
<ul>
<li><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a><strong>无序列表</strong></h2><p>  无序列表使用星号（*）、加号（+）或减号（-）作为列表标记， 如：</p>
</li>
<li><h2 id="Markdown-4"><a href="#Markdown-4" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* Red</span><br><span class="line">* Green</span><br><span class="line">* Blue  </span><br><span class="line"></span><br><span class="line">+ Red</span><br><span class="line">+ Green</span><br><span class="line">+ Blue  </span><br><span class="line"></span><br><span class="line">- Red</span><br><span class="line">- Green</span><br><span class="line">- Blue</span><br><span class="line"></span><br><span class="line">* Red</span><br><span class="line">+ Green</span><br><span class="line">- Blue </span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-5"><a href="#实际输出效果-5" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><ul>
<li>Red</li>
</ul>
<ul>
<li>Green</li>
</ul>
<ul>
<li>Blue   </li>
</ul>
</li>
<li><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a><strong>有序列表</strong></h2><p>  有序列表则使用数字接着一个英文句点加至少一个空格，数字仅起到标记这是有序列表的作用，列表标记上使用的数字并不会影响输出的 HTML 结果，如 ：</p>
</li>
<li><h2 id="Markdown-5"><a href="#Markdown-5" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Red</span><br><span class="line">2. Green</span><br><span class="line">3. Blue </span><br><span class="line"></span><br><span class="line">1. Red</span><br><span class="line">4. Green</span><br><span class="line">3. Blue </span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-6"><a href="#实际输出效果-6" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><ul>
<li>都是按顺序输出</li>
</ul>
<ol>
<li>Red</li>
<li>Green</li>
<li>Blue   </li>
</ol>
</li>
<li><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a><strong>段落</strong></h2><p>  段落由减号加一个空格跟具体内容组成，列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符，同一段落中的换行遵循换行的原则，即至少 2 个空格或 1 个制表符加回车 ：</p>
</li>
<li><h2 id="Markdown-6"><a href="#Markdown-6" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 这是第一段    </span><br><span class="line">这是第一段中内容    </span><br><span class="line">这是第一段中内容</span><br><span class="line"></span><br><span class="line">- 这是第二段    </span><br><span class="line">这是第二段中内容    </span><br><span class="line">这是第二段中内容</span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-7"><a href="#实际输出效果-7" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><ul>
<li><p>这是第一段<br>这是第一段中内容<br>这是第一段中内容</p>
</li>
<li><p>这是第二段<br>这是第二段中内容<br>这是第二段中内容</p>
</li>
</ul>
</li>
</ul>
<h1 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a><strong>代码区块</strong></h1><p>要在 Markdown 中建立代码区块只要简单地缩进 4 个空格或是 1 个制表符就可以<br>一个代码区块会一直持续到没有缩进的那一行或是文件结尾。</p>
<p>也可以使用 ` 或 ``` 来实现行内代码，这种方法可以标识代码语言</p>
<ul>
<li><h2 id="Markdown-7"><a href="#Markdown-7" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个普通段落：</span><br><span class="line"></span><br><span class="line">    这是一个代码区块。</span><br><span class="line"></span><br><span class="line">    ```c</span><br><span class="line">    return 1;//标明代码块，并标识语言，可以对相应语言语法进行代码高亮</span><br></pre></td></tr></table></figure>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- ## **实际输出效果**</span><br><span class="line">    这是一个普通段落：</span><br><span class="line"></span><br><span class="line">        这是一个代码区块。</span><br><span class="line"></span><br><span class="line">    ```c</span><br><span class="line">        return 1;//标明代码块，并标识语言，可以对相应语言语法进行代码高亮</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a><strong>超链接</strong></h1><p>Markdown 支持两种形式的超链接语法： 行内式和参考式两种形式。</p>
<p>两种链接文字都是用 [方括号] 来标记。</p>
<p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的标题，只要在网址后面，用双引号把标题包起来即可，例如：</p>
<ul>
<li><h2 id="Markdown-8"><a href="#Markdown-8" class="headerlink" title="Markdown"></a><strong>Markdown</strong></h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是行内式的 [行内式](http://xxx.com/ &quot;标题&quot;)。</span><br><span class="line"></span><br><span class="line">这是行内式的 **[行内式加粗例子](http://xxx.com/ &quot;标题&quot;)**.</span><br><span class="line"></span><br><span class="line">[这个链接](http://xxx.com/) 没有`标题`文本段。</span><br></pre></td></tr></table></figure></li>
<li><h2 id="实际输出效果-8"><a href="#实际输出效果-8" class="headerlink" title="实际输出效果"></a><strong>实际输出效果</strong></h2><p>  这是行内式的 <a href="http://xxx.com/" title="标题">行内式</a>。</p>
<p>  这是行内式的 <strong><a href="http://xxx.com/" title="标题">行内式加粗例子</a></strong>.</p>
<p>  <a href="http://xxx.com/">这个链接</a> 没有<code>标题</code>文本段。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>新版VSCode git bash终端配置</title>
    <url>/2022/01/23/%E6%96%B0%E7%89%88VSCode%20git%20bash%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><strong>当VSCode升级至1.57.1时，会出现警告提示：</strong><br>  此项已弃用，配置默认 shell 的新推荐方法是在 #terminal.integrated.profiles.windows# 中创建一个终端配置文件，并将其配置文件名称设置为 #terminal.integrated.defaultProfile.windows# 中的默认值</p>
<span id="more"></span>

<h2 id="官方文档给予的解决方法"><a href="#官方文档给予的解决方法" class="headerlink" title="官方文档给予的解决方法"></a><a href="https://code.visualstudio.com/docs/editor/integrated-terminal">官方文档</a>给予的解决方法</h2><p>将seetings.json下面的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;terminal.integrated.shell.windows&quot;</span>: <span class="string">&quot;C:\\Program Files\\Git\\bin\\bash.exe&quot;</span>：</span><br></pre></td></tr></table></figure>
<p>更改为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;terminal.integrated.profiles.windows&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;cmder&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;C:\\WINDOWS\\System32\\cmd.exe&quot;</span>,</span><br><span class="line">      <span class="string">&quot;args&quot;</span>: [<span class="string">&quot;/K&quot;</span>, <span class="string">&quot;C:\\cmder\\vendor\\bin\\vscode_init.cmd&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;terminal.integrated.defaultProfile.windows&quot;</span>: <span class="string">&quot;cmder&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实测依旧报错</p>
<h2 id="现解决方法"><a href="#现解决方法" class="headerlink" title="现解决方法"></a>现解决方法</h2><p>更改上方代码为以下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;terminal.integrated.profiles.windows&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;my-cmd&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;path&quot;</span>: <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span>,</span><br><span class="line">      <span class="string">&quot;args&quot;</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;terminal.integrated.defaultProfile.windows&quot;</span>: <span class="string">&quot;my-cmd&quot;</span>,</span><br></pre></td></tr></table></figure>
<p>  截至1.64.2版本实测没问题。</p>
]]></content>
      <categories>
        <category>Code</category>
      </categories>
      <tags>
        <tag>VS Code</tag>
      </tags>
  </entry>
</search>
